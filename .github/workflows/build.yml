  # This is a basic workflow to help you get started with Actions

  name: CI

  on:
    push:
      branches: [ release ]
    workflow_dispatch:
      branches: [ release ]

  jobs:
    build:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - name: Install Node.js
          uses: actions/setup-node@v1
          with:
            node-version: 12
        - name: Install Zip
          uses: montudor/action-zip@v0.1.0
        - name: Download thirdparty
          run: |
            mkdir downloads
            wget https://www.amxmodx.org/amxxdrop/1.9/amxmodx-1.9.0-git5271-base-linux.tar.gz -P ./downloads
            wget https://www.amxmodx.org/amxxdrop/1.9/amxmodx-1.9.0-git5271-cstrike-linux.tar.gz -P ./downloads
            wget https://github.com/s1lentq/reapi/releases/download/5.19.0.210/reapi_5.19.0.205-dev.zip -P ./downloads
        - name: Setup Build Variables
          id: buildvars
          uses: actions/github-script@v3
          with:
            github-token: ${{secrets.GITHUB_TOKEN}}
            script: |
              try {
                const package = require(`${process.env.GITHUB_WORKSPACE}/package.json`);
                ['name', 'version', 'description', 'author']
                  .forEach(k => core.setOutput(k, package[k]));
                const tagVersion = package.version.replace(/\./g, '');
                core.setOutput('tagversion', tagVersion);
                core.setOutput('tagname', `${package.name}-${tagVersion}`);
                core.setOutput('releasename', `${package.description} Release v${package.version}`);
              } catch (err) {
                core.setFailed(err.message);
              }
        - name: Setup compiler
          run: |
            mkdir ./compiler
            tar --strip-components=3 -zxf ./downloads/amxmodx-1.9.0-git5271-base-linux.tar.gz -C ./compiler addons/amxmodx/scripting
            tar --strip-components=3 -zxf ./downloads/amxmodx-1.9.0-git5271-cstrike-linux.tar.gz -C ./compiler addons/amxmodx/scripting
            mkdir -p ./thirdparty/reapi
            unzip ./downloads/reapi_5.19.0.205-dev.zip -d ./thirdparty/reapi
        - name: Install Dependencies
          run: npm install
        - name: Build project
          run: npm run build
        - name: Pack bundles
          run: npm run pack
        - name: Create Release
          id: create_release
          uses: actions/create-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            tag_name: ${{ steps.buildvars.outputs.tagname }}
            release_name: ${{ steps.buildvars.outputs.releasename }}
            draft: false
            prerelease: false
        - name: Upload Release Addons Src
          id: upload-release-addons-src
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: ./dist/bundles/src/zombiepanic-${{ steps.buildvars.outputs.tagversion }}-addons.zip
            asset_name: zombiepanic-${{ steps.buildvars.outputs.tagversion }}-addons-src.zip
            asset_content_type: application/zip
        - name: Upload Release Build
          id: upload-release-addons-reapi
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: ./dist/bundles/full/zombiepanic-${{ steps.buildvars.outputs.tagversion }}-addons.zip
            asset_name: zombiepanic-${{ steps.buildvars.outputs.tagversion }}-addons-build.zip
            asset_content_type: application/zip
        - name: Upload Release Resources
          id: upload-release-resources
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: ./dist/bundles/full/zombiepanic-${{ steps.buildvars.outputs.tagversion }}-resources.zip
            asset_name: zombiepanic-${{ steps.buildvars.outputs.tagversion }}-resources.zip
            asset_content_type: application/zip
        # - name: Upload Release SDK
        #   id: upload-release-sdk
        #   uses: actions/upload-release-asset@v1
        #   env:
        #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        #   with:
        #     upload_url: ${{ steps.create_release.outputs.upload_url }}
        #     asset_path: ./dist/bundles/sdk/zombiepanic-${{ steps.buildvars.outputs.tagversion }}-sdk.zip
        #     asset_name: zombiepanic-${{ steps.buildvars.outputs.tagversion }}-sdk.zip
        #     asset_content_type: application/zip
        - name: Cleanup
          run: |
            rm -rf ./compiler
            rm -rf ./thirdparty
            rm -rf ./dist
            rm -rf ./downloads
